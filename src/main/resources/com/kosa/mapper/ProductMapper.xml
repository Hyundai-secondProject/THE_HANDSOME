<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- /**
 * @author 박서은
 * @since 2022.10.17
 * @version 1.0
 * 
 * <pre>
 * 수정일              	수정자                   수정내용
 * 2022.10.17     박서은              최초 생성
 * 2022.10.26	    박서은		 필터링 sql 및 필터링 내용 추가
 * </pre>
 */ --> 
<mapper namespace="com.kosa.mapper.ProductMapper">

<!-- 키워드는 무조건 대문자 소문자 구분!!!! -->
	<sql id="criteria">
		<trim prefix=" AND (" suffix=")" prefixOverrides="AND">
			<foreach item="type" collection="cri.typeArr"> 
				<trim prefix="AND">
					<choose>					      
						<when test="type== 'B'.toString()">
							bname like '%' || #{cri.bkeyword} || '%'
						</when>
						<when test="type== 'C'.toString()">
							pccolorcode like '%' || #{cri.ckeyword} || '%'
						</when>
						<when test="type== 'P'.toString()">
						  <![CDATA[  
							pcprice >= #{cri.startp} and pcprice < #{cri.endp}						
						    ]]>
						</when>
					</choose> <!-- end choose -->
				</trim><!--end trim OR -->
			</foreach> <!--foreach -->
		</trim> <!--end trim pre... -->
	</sql>
	
	<!-- 키워드는 무조건 대문자 소문자 구분!!!! -->
	<sql id="criteria2">

			<foreach item="type" collection="cri.typeArr"> 
	
					<choose>					      
						<when test="type== 'H'.toString()">
							order by pcprice desc
						</when>
						<when test="type== 'L'.toString()">
							order by pcprice 
						</when>
					</choose> <!-- end choose -->
			</foreach> <!--foreach -->

	</sql>
	

	<!-- 대분류 -->
	<select id="selectProductsDepth1"
		resultType="com.kosa.domain.product.ProductVO" parameterType="HashMap">
       <![CDATA[     
        select pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
			from (
				select rownum as rnum, pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
				from (
                    select distinct pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pcprice
                        from (
                        	select PV.pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pc.pccolorcode, pc.pcprice
                        	from productVO_view pv, product_color pc
                        	WHERE pv.pid = pc.pid
                            AND depth1name = #{category.depth1name}
                            AND depth2name LIKE '%'
                            AND depth3name LIKE '%'
                            ]]>
                            <include refid="criteria"/>                  
                    		)
                    		<include refid="criteria2"/>  
 					<![CDATA[
                    )
                    where 
                    ROWNUM <= #{cri.pageNum} * #{cri.amount}
                )
            where rnum > (#{cri.pageNum} - 1) * #{cri.amount}
            ]]> 
	</select>

	<!-- 중분류 -->
	<!-- paging처리 코드 수정 필요 -->
	<select id="selectProductsDepth2"
		resultType="com.kosa.domain.product.ProductVO" parameterType="HashMap">
       <![CDATA[     
        select pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
			from (
				select rownum as rnum, pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
				from (
                    select distinct pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pcprice
                        from (
                        	select PV.pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pc.pccolorcode, pc.pcprice
                        	from productVO_view pv, product_color pc
                        	WHERE pv.pid = pc.pid
                            AND depth1name = #{category.depth1name}
                            AND depth2name = #{category.depth2name}
                            AND depth3name LIKE '%'
                            ]]>
                            <include refid="criteria"/>                  
                    		)
                    		<include refid="criteria2"/>  
 					<![CDATA[
                    )
                    where 
                    ROWNUM <= #{cri.pageNum} * #{cri.amount}
                )
            where rnum > (#{cri.pageNum} - 1) * #{cri.amount}
            ]]> 
	</select>

	<!-- 소분류 -->
	<!-- paging처리 코드 수정 필요 -->
	<select id="selectProductsDepth3"
		resultType="com.kosa.domain.product.ProductVO" parameterType="HashMap">
       <![CDATA[     
        select pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
			from (
				select rownum as rnum, pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname
				from (
                    select distinct pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pcprice
                        from (
                        	select PV.pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pc.pccolorcode, pc.pcprice
                        	from productVO_view pv, product_color pc
                        	WHERE pv.pid = pc.pid
                            AND depth1name = #{category.depth1name}
                            AND depth2name = #{category.depth2name}
                            AND depth3name = #{category.depth3name}
                            ]]>
                            <include refid="criteria"/>                  
                    		)
                    		<include refid="criteria2"/>  
 					<![CDATA[
                    )
                    where 
                    ROWNUM <= #{cri.pageNum} * #{cri.amount}
                )
            where rnum > (#{cri.pageNum} - 1) * #{cri.amount}
            ]]> 
	</select>

	<!-- 대분류 갯수 세기 -->
	<select id="countDepth1" resultType="int"
		parameterType="HashMap">
        select count(distinct pid)
            from (
            	select pv.pid
            	from productVO_view pv, product_color pc
            	WHERE pv.pid = pc.pid
                AND depth1name = #{category.depth1name}
                AND depth2name LIKE '%'
                AND depth3name LIKE '%'
                <include refid="criteria"> </include>
                )
	</select>

	<!-- 중분류 갯수 세기 -->
	<select id="countDepth2" resultType="int"
		parameterType="HashMap">
        select count(distinct pid)
            from (
            	select pv.pid
            	from productVO_view pv, product_color pc
            	WHERE pv.pid = pc.pid
                AND depth1name = #{category.depth1name}
                AND depth2name = #{category.depth2name}
                AND depth3name LIKE '%'
                <include refid="criteria"> </include>
                )
	</select>

	<!-- 소분류 갯수 세기 -->
	<select id="countDepth3" resultType="int"
		parameterType="HashMap">
        select count(distinct pid)
            from (
            	select pv.pid
            	from productVO_view pv, product_color pc
            	WHERE pv.pid = pc.pid
                AND depth1name = #{category.depth1name}
                AND depth2name = #{category.depth2name}
                AND depth3name = #{category.depth3name}
                <include refid="criteria"> </include>
                )
	</select>

	<!-- 제품 코드로 색상 정보 가녀오기 -->
	<select id="selectProductColor"
		resultType="com.kosa.domain.product.ProductColorVO"
		parameterType="com.kosa.domain.product.ProductVO">
		select pcid, pcimg1, pcimg2, pcimg3, pcchipimg,
		pccolorcode, pcprice, pid
		from product_color
		where pid = #{pid}
	</select>

	<!-- 제품 코드로 사이즈 정보 가녀오기 -->
	<!-- s,m,l 순서로 정렬 -->
	<select id="selectProductSize"
		resultType="com.kosa.domain.product.ProductSizeVO"
		parameterType="com.kosa.domain.product.ProductVO">
		select *
		from sizeVO_view
		where pid = #{pid}
		order by
		case
		psize when 'S' then 1
		when 'M' then 2
		when 'L' then 3
		end
		asc,
		psize asc
	</select>

	<!-- 제품 색상 id로 size별 재고 가져오기 -->
	<select id="selectProductStock"
		resultType="com.kosa.domain.product.ProductStockVO"
		parameterType="String">
		select *
		from product_stock
		where psid = #{psid}
	</select>

	<!-- 재고수량 변경 -->
	<update id="updateProductStock">
		update product_stock
		set psstock = #{psstock}
		where
		psid = #{psid}
	</update>

 	<!-- 제품 id로 제품 가져오기 -->
	<select id="selectProduct"
		resultType="com.kosa.domain.product.ProductVO">
		<![CDATA[
		select * from PRODUCTVO_VIEW where pid = #{pid}
		 ]]>
	</select>
	
	<!-- 검색 결과 -->
	<select id="Search" resultType = "com.kosa.domain.product.ProductVO" parameterType="HashMap"> 

 <![CDATA[      
         select pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname 
 			from ( 
 				select rownum as rnum, pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname 
 				from ( 
                     select distinct pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname 
                         from ( 
                         	select PV.pid, pname, pnote, bno, pstatus, depth1name, depth2name,depth3name, bname, pc.pccolorcode, pc.pcid 
                         	from productVO_view pv, product_color pc 
                         	WHERE pv.pid = pc.pid 
                        	
                         	and (pv.pid like '%' || #{SearchWord} || '%' or pv.bname like '%' || #{SearchWord} || '%' or pv.pname like '%' || #{SearchWord} || '%') order by bname 
                            
                             ]]> 
                             <include refid="criteria"/>  

                     <![CDATA[ 
                     		) 
                     ) 
                     where  
                     ROWNUM <= #{cri.pageNum} * #{cri.amount} 
                 ) 
             where rnum > (#{cri.pageNum} - 1) * #{cri.amount} 
             ]]>  
 </select>
	
	
	<!-- 검색된 결과 갯수 -->
	<select id="SearchCount" resultType="int" 
 		parameterType="String"> 
         select count(distinct pid) 
             from ( 
             	select pv.pid 
             	from productVO_view pv, product_color pc 
             	WHERE pv.pid = pc.pid 
                 and (pv.pid like '%' || #{SearchWord} || '%' or pv.bname like '%' || #{SearchWord} || '%' or pv.pname like '%' || #{SearchWord} || '%') 
                 <include refid="criteria"> </include> 
                 ) 
 	</select> 

</mapper>